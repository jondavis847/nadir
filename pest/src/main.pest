WHITESPACE = _{ " " | "\t" | NEWLINE }

term = { enclosed | struct_call | instance_call | instance_field | function_call | vector | matrix | identifier | number }
expr = { math | term }
assignment = { identifier ~ WHITESPACE* ~ "=" ~ WHITESPACE* ~ expr }

math = { (prefix+ ~ term ~ postfix*) | (prefix* ~ term ~ postfix* ~ (infix ~ prefix* ~ term ~ postfix*)+) }
infix = _{ add | sub | mul | div }
add = { "+" }
sub = { "-" }
mul = { "*" }
div = { "/" }
pow = { "^" } // Exponentiation
prefix = _{ neg }
neg = { "-" }
postfix = _{ fac }
fac = { "!" }

identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
integer = @{ "-"? ~ ASCII_DIGIT+ }
float = @{ "-"? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ ~ (("e" | "E") ~ ("+" | "-")? ~ ASCII_DIGIT+)? }
number = { float | integer }
enclosed = { "(" ~ WHITESPACE* ~ expr ~ WHITESPACE* ~ ")" }

comma_separated = { WHITESPACE* ~ expr ~ (WHITESPACE* ~ "," ~ WHITESPACE* ~ expr)* ~ WHITESPACE* }
space_separated = { WHITESPACE* ~ expr ~ (WHITESPACE+ ~ expr)* ~ WHITESPACE* }

function_call = { identifier ~ "(" ~ WHITESPACE* ~ arguments? ~ WHITESPACE* ~ ")" }
arguments = { comma_separated }

struct_call = { identifier ~ "::" ~ function_call}
instance_field = { identifier ~ "." ~ identifier }
instance_call = { identifier ~ "." ~ function_call}

line = { print_line | silent_line }
silent_line = { print_line ~ ";" }
print_line = { assignment | expr }

elements = { comma_separated }
vector = { "[" ~ WHITESPACE* ~ (elements)? ~ "]" }
matrix_row = { space_separated ~ ";"?}
matrix = { "[" ~ (matrix_row)* ~ "]" }